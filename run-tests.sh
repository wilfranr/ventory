#!/bin/bash

# Script para ejecutar todas las pruebas de la l√≥gica de empresas
# Ventory - Company Logic Tests

echo "üß™ Ejecutando pruebas de la l√≥gica de empresas de Ventory"
echo "=================================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar resultados
show_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# Backend Tests
echo -e "\n${BLUE}üîß Ejecutando pruebas del Backend${NC}"
echo "----------------------------------------"

# Pruebas unitarias
echo -e "\n${YELLOW}üìã Pruebas Unitarias:${NC}"

echo "‚Ä¢ CompanyFilterInterceptor..."
cd ventory-backend && npm test -- --testPathPattern=company-filter.interceptor.spec.ts
show_result $? "CompanyFilterInterceptor"

echo "‚Ä¢ CompanyAccessGuard..."
npm test -- --testPathPattern=company-access.guard.spec.ts
show_result $? "CompanyAccessGuard"

echo "‚Ä¢ ListItemService..."
npm test -- --testPathPattern=list-item.service.spec.ts
show_result $? "ListItemService"

echo "‚Ä¢ ListItemController..."
npm test -- --testPathPattern=list-item.controller.spec.ts
show_result $? "ListItemController"

echo "‚Ä¢ UsersService..."
npm test -- --testPathPattern=users.service.spec.ts
show_result $? "UsersService"

echo "‚Ä¢ Company Access Exceptions..."
npm test -- --testPathPattern=company-access.exception.spec.ts
show_result $? "Company Access Exceptions"

# Pruebas de integraci√≥n
echo -e "\n${YELLOW}üîó Pruebas de Integraci√≥n:${NC}"

echo "‚Ä¢ Company Access E2E..."
npm run test:e2e -- --testPathPattern=company-access.e2e-spec.ts
show_result $? "Company Access E2E"

cd ..

# Frontend Tests
echo -e "\n${BLUE}üé® Ejecutando pruebas del Frontend${NC}"
echo "----------------------------------------"

cd ventory-frontend

echo "‚Ä¢ CompanyIdInterceptor..."
npm test -- --include="**/company-id.interceptor.spec.ts"
show_result $? "CompanyIdInterceptor"

echo "‚Ä¢ SessionService..."
npm test -- --include="**/session.service.spec.ts"
show_result $? "SessionService"

cd ..

# Resumen
echo -e "\n${BLUE}üìä Resumen de Pruebas${NC}"
echo "===================="

echo -e "\n${GREEN}‚úÖ Pruebas implementadas:${NC}"
echo "‚Ä¢ Interceptor de filtrado por empresa"
echo "‚Ä¢ Guard de acceso a empresa"
echo "‚Ä¢ Servicios con validaci√≥n de empresa"
echo "‚Ä¢ Controladores con protecci√≥n de empresa"
echo "‚Ä¢ Excepciones espec√≠ficas de acceso"
echo "‚Ä¢ Pruebas de integraci√≥n end-to-end"
echo "‚Ä¢ Interceptor del frontend"
echo "‚Ä¢ Servicios de sesi√≥n del frontend"

echo -e "\n${YELLOW}üìù Cobertura de pruebas:${NC}"
echo "‚Ä¢ Unitarias: Guards, Interceptors, Services, Controllers"
echo "‚Ä¢ Integraci√≥n: Flujos completos de acceso a empresa"
echo "‚Ä¢ E2E: Aislamiento de datos entre empresas"
echo "‚Ä¢ Frontend: Interceptores y servicios de contexto"

echo -e "\n${BLUE}üöÄ Para ejecutar pruebas espec√≠ficas:${NC}"
echo "Backend: cd ventory-backend && npm test -- --testPathPattern=<nombre>"
echo "Frontend: cd ventory-frontend && npm test -- --include='**/<nombre>.spec.ts'"
echo "E2E: cd ventory-backend && npm run test:e2e -- --testPathPattern=<nombre>"

echo -e "\n${GREEN}üéâ ¬°Pruebas de la l√≥gica de empresas completadas!${NC}"
